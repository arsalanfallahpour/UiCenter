{
	"version": 3,
	"file": "uicenter.css",
	"sources": [
		"../../../../src/scss/all-sets/uicenter.scss",
		"../../../../src/scss/all-sets/core/_access-all.scss",
		"../../../../src/scss/all-sets/core/_import-all.scss",
		"../../../../src/scss/all-sets/core/configurations/_import-all.scss",
		"../../../../src/scss/all-sets/core/configurations/uiCenter/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/variables/values/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/variables/values/_default-values.scss",
		"../../../../src/scss/all-sets/core/scss/functions/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/functions/parameters/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/functions/parameters/_parameters-join.scss",
		"../../../../src/scss/all-sets/core/scss/functions/lists/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/functions/lists/_lists-clear.scss",
		"../../../../src/scss/all-sets/core/scss/functions/lists/_list-get-item.scss",
		"../../../../src/scss/all-sets/core/scss/functions/lists/_lists-remove-item.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_import-all.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-bulk-replace.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-capitalize-first.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-capitalize.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-decapitalize-first.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-decapitalize.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-clean.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-chars.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-char-at.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-split.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-join.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-count.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-to-uppercase.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-to-lowercase.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-to-swapcase.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-remove-whitespace.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-replace.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-include.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-substring-info.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-first-index.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-last-index.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-reverse.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-get-not-skipped-char-index.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-trim.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-ltrim.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-rtrim.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-is-blank.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-starts-with.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-ends-with.scss",
		"../../../../src/scss/all-sets/core/scss/functions/strings/_string-repeat.scss",
		"../../../../src/scss/all-sets/core/css/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/user-select/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/user-select/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/user-select/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/user-select/mixins/_user-select-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/user-select/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/width/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/width/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/width/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/width/mixins/_width-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/width/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/structure-simulation/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/structure-simulation/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/structure-simulation/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/structure-simulation/mixins/_switch-case-mixin.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/structure-simulation/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/optimization/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/optimization/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/optimization/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/optimization/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/optimization/placeholders/_text-optimization-placeholder.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/mixins/_box-sizing-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/box-sizing/placeholders/_box-sizing-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/variables/_breakpoints-values.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/_breakpoint-responsive-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xxl/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xxl/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xxl/portrait/_xxl-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xxl/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xxl/landscape/_xxl-landscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xl/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xl/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xl/portrait/_xl-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xl/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xl/landscape/_xl-landscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/lg/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/lg/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/lg/portrait/_lg-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/lg/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/lg/landscape/_lg-lanscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/md/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/md/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/md/portrait/_md-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/md/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/md/landscape/_md-landscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/sm/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/sm/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/sm/portrait/_sm-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/sm/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/sm/landscape/_sm-landscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xs/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xs/portrait/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xs/portrait/_xs-portrait-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xs/landscape/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/mixins/screens/xs/landscape/_xs-landscape-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/breakpoint-system/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/aspect-ratio-responsive/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/aspect-ratio-responsive/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/aspect-ratio-responsive/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/aspect-ratio-responsive/mixins/_aspect-ratio-responsive.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/aspect-ratio-responsive/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/grid-system/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/grid-system/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/grid-system/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/responsive-design/grid-system/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/scaling/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/scaling/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/scaling/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/scaling/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/scaling/placeholders/_scaling-placeholder.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/centering/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/centering/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/centering/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/centering/mixins/_box-centering-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/centering/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/transform/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/transform/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/transform/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/transform/mixins/_transform-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/common-sets/transform/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/mixins/_position-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/position/placeholders/_position-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/variables/_color-variables.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/variables/favorites/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/variables/favorites/_color-favorites-dark.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/variables/favorites/_color-favorites-light.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/mixins/_color-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/color/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/variables/_font-variables.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/mixins/_font-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/font/placeholders/_font-palceholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/mixins/_border-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/mixins/_magic-border-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/border/placeholders/_border-placeholder.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/mixins/gradients/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/mixins/gradients/_gradient-linear-angle-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/background/placeholders/_background-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/variables/_background-color-variable.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/mixins/_background-color-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-color/placeholders/_background-color-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-clip/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-clip/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-clip/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-clip/mixins/_background-clip-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/background-clip/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/mixins/_clip-path-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/mixins/_supports-clip-path-mixin.scss",
		"../../../../src/scss/all-sets/core/css/properties/clip-path/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/appearance/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/appearance/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/appearance/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/appearance/mixins/_appearance-mixin.scss",
		"../../../../src/scss/all-sets/core/css/properties/appearance/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/box-shadow/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/box-shadow/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/box-shadow/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/box-shadow/mixins/_box-shadow-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/box-shadow/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/mixins/_text-align-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/mixins/_text-shadow-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/mixins/_text-fill-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/text/placeholders/_text-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_display-flex.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_align-content.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_align-items.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_align-self.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_justify-content.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_flex.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_flex-direction.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_flex-flow.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_flex-shrink.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_flex-wrap.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/mixins/_order.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/display/flex/placeholders/_flex-placeholder.scss",
		"../../../../src/scss/all-sets/core/css/properties/vertical-align/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/vertical-align/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/vertical-align/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/vertical-align/mixins/_supports-vertical-align-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/vertical-align/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/opacity/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/opacity/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/opacity/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/opacity/mixins/_opacity-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/opacity/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/mixins/_filter-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/filter/placeholders/_filter-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/overflow/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/overflow/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/overflow/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/overflow/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/overflow/placeholders/_overflow-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/variables/_height-variables.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/height/placeholders/_height-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/mixins/_transition-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/transition/placeholders/_transition-placeholders.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/variables/_import-all.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/mixins/_access.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/mixins/_keyframes-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/mixins/_animation-mixins.scss",
		"../../../../src/scss/all-sets/core/css/properties/animation/placeholders/_import-all.scss",
		"../../../../src/scss/all-sets/implementations/_access-all.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/_access.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/coloring-system/_access.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/coloring-system/_default-coloring-system.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_access.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_use-configuration.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-width.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/width/_default-width.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-height.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/height/_default-height.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-text.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/text/_default-text.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-display.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/display/_default-display.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-opacity.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/opacity/_default-opacity.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-filter.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/filter/_default-filter.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-transform.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/transform/_default-transform.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-transition.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/transition/_default-transition.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/_import-all-overflow.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/css-property/overflow/_default-overflow.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/fast-coding/_access.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/fast-coding/_set-box-location.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/fast-coding/_sizing.scss",
		"../../../../src/scss/all-sets/implementations/class-generator/fast-coding/_container-styling.scss"
	],
	"sourcesContent": [
		"@import \"./core/access-all\";\r\n@import \"./implementations/access-all\";",
		"@import \"./import-all\";\r\n@import \"./css/access\";",
		"@import \"./configurations/import-all\";\r\n@import \"./scss/import-all\";",
		"@import \"./uiCenter/import-all\";",
		"// @import \"./common/\";\r\n// @import \"./responsive/\";",
		"@import \"./variables/import-all\";\r\n@import \"./functions/import-all\";",
		"@import \"./values/import-all\";",
		"@import \"./default-values\";",
		"$base-unit: em !default;\r\n$base-line-height: 1.15 !default;\r\n$default-indentation-amount: 40px !default; //For tags content indentation like <dd>\r\n$gutter : 8px;",
		"@import \"./parameters/import-all\";\r\n@import \"./lists/import-all\";\r\n@import \"./strings/import-all\";",
		"@import \"./parameters-join\";",
		"//example\r\n// $color-stops-joined: #{ parameters-join(\",\", $color-stop-parameters) };\r\n@function parameters-join($delimiter, $parameters...){\r\n\r\n    $result : \"\";\r\n    @each $parameter in $parameters {\r\n\r\n        @if($result == \"\")\r\n        {\r\n            $result  : $result  + $parameter;\r\n        }\r\n        @else\r\n        {  \r\n            $result :  $result + $delimiter  + $parameter; \r\n        }\r\n    }\r\n    @return $result;\r\n}\r\n",
		"@import \"./lists-clear\";\r\n@import \"./list-get-item\";\r\n@import \"./lists-remove-item\";",
		"@function list-clear(){\r\n    @return ();\r\n}",
		"@function list-get-last-item($list){\r\n    @return nth($list, length($list));\r\n}\r\n@function list-get-first-item($list){\r\n        @return nth($list, 1);\r\n}",
		"@function list-remove-item-range($list, $index){\r\n\r\n}\r\n//example\r\n//nth-delete( (foo bar baz qux), 2 )     =>  foo baz qux\r\n//nth-delete( (foo, bar, baz, qux), 2 )  =>  foo, baz, qux\r\n//nth-delete( [foo bar baz qux], 2 )     =>  [foo baz qux]\r\n//nth-delete( [foo, bar, baz, qux], 2 )  =>  [foo, baz, qux]\r\n\r\n//nth-delete( (foo bar baz qux), -2 )    =>  foo bar qux\r\n//nth-delete( (foo, bar, baz, qux), -2 ) =>  foo, bar, qux\r\n//nth-delete( [foo bar baz qux], -2 )    =>  [foo bar qux]\r\n//nth-delete( [foo, bar, baz, qux], -2 ) =>  [foo, bar, qux]\r\n@function list-remove-item-nth($list, $index){\r\n    $result: ();\r\n\r\n    $index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n    //$bracketed: is-bracketed($list);\r\n\r\n    $separator: list-separator($list);\r\n\r\n    @for $i from 1 through length($list){\r\n\r\n        @if $i != $index { $result: append($result, nth($list, $i)); }\r\n    }\r\n\r\n    @return list-join-bracketed(list-clear(), $result, $separator);\r\n}\r\n\r\n\r\n",
		"@import \"./string-bulk-replace\";\r\n@import \"./string-capitalize-first\";\r\n@import \"./string-capitalize\";\r\n@import \"./string-decapitalize-first\";\r\n@import \"./string-decapitalize\";\r\n@import \"./string-clean\";\r\n@import \"./string-chars\";   \r\n@import \"./string-char-at\";\r\n@import \"./string-split\";\r\n@import \"./string-join\";\r\n@import \"./string-count\";\r\n@import \"./string-to-uppercase\";\r\n@import \"./string-to-lowercase\";\r\n@import \"./string-to-swapcase\";\r\n@import \"./string-remove-whitespace\";\r\n@import \"./string-replace\";\r\n@import \"./string-bulk-replace\";\r\n@import \"./string-include\";\r\n@import \"./string-substring-info\";\r\n@import \"./string-count\";\r\n@import \"./string-first-index\";\r\n@import \"./string-last-index\";\r\n@import \"./string-reverse\";\r\n@import \"./string-get-not-skipped-char-index\";\r\n@import \"./string-trim\";\r\n@import \"./string-ltrim\";\r\n@import \"./string-rtrim\";\r\n@import \"./string-is-blank\";\r\n@import \"./string-starts-with\";\r\n@import \"./string-ends-with\";\r\n@import \"./string-repeat\";\r\n",
		"/// #string-bulk-replace($input-string, $substrings[, $replace, $g]) => string\r\n/// Returns copy of input string where defined substrings replaced by $replace argument\r\n/// @param {string} $input-string - input string\r\n/// @param {list} $substrings - substrings to search in input string\r\n/// @param {string} $replace [''] - string to be inserted instead of substrings\r\n/// @param {boolean} $g [true] -  flag\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-bulk-replace('Hello world', ('l', 'o'), '*');\r\n///   // => \"He*** w*r*d\"\r\n///   @debug string-bulk-replace('Hello world', ('l', 'o'), $g: false);\r\n///   // => \"Hel world\"\r\n///   @debug string-bulk-replace('Hello To The world', ('Hello', 'To The'), 'Privet');\r\n///   // => \"Privet Privet world\"\r\n\r\n@function string-bulk-replace($input-string, $substrings, $replace: '', $g: true) {\r\n\r\n    @each $substring in $substrings {\r\n        $input-string: string-replace($input-string, $substring, $replace, $g);\r\n    }\r\n\r\n    @return $input-string;\r\n}\r\n",
		"/// #string-capitalize-first($input-string) => string\r\n/// Returns input string where the first letter is converted to uppercase\r\n/// @access private\r\n/// @param {string} $input-string - input string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-capitalize-first('hello wold');\r\n///   // => 'Hello world'\r\n\r\n@function string-capitalize-first($input-string) {\r\n    @return string-to-uppercase(str-slice($input-string, 1, 1)) + str-slice($input-string, 2);\r\n}\r\n",
		"/// #string-capitalize($input-string[, $lowercase-rest]) => string\r\n/// Returns string with capitalized first letter\r\n/// @param {string} $input-string - input string\r\n/// @param {boolean} $lowercase-rest [false]\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-capitalize('hello wold');\r\n///   // => \"Hello wold\"\r\n///   @debug string-capitalize('hELLO wold');\r\n///   // => \"HELLO wold\"\r\n///   @debug string-capitalize('hELLO wold', true);\r\n///   // => \"Hello wold\"\r\n\r\n@function string-capitalize($input-string, $lowercase-rest: false) {\r\n\r\n    @if ($lowercase-rest == true) {\r\n        $first-item: nth(string-split($input-string), 1);\r\n        $first-item: string-capitalize-first(string-to-lowercase($first-item));\r\n        $input-string: $first-item + str-slice($input-string, str-length($first-item) + 1);\r\n    } @else {\r\n        $input-string: string-capitalize-first($input-string);\r\n    }\r\n\r\n    @return $input-string;\r\n}\r\n",
		"/// #string-decapitalize-first($input-string) => string\r\n/// Returns input string where the first letter is converted to lowercase\r\n/// @access private\r\n/// @param {string} $input-string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-decapitalize-first('Hello Wold');\r\n///   // => 'hello World'\r\n\r\n@function string-decapitalize-first($input-string) {\r\n    @return string-to-lowercase(str-slice($input-string, 1, 1)) + str-slice($input-string, 2);\r\n}\r\n",
		"/// #string-decapitalize($input-string[, $lowercase-rest]) => string\r\n/// Returns string with decapitalized first letter\r\n/// @param {string} $input-string\r\n/// @param {boolean} $lowercase-rest [false]\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-decapitalize('Hello World');\r\n///   // => \"hello World\"\r\n///   @debug string-decapitalize('HELLO WORLD');\r\n///   // => \"hELLO WORLD\"\r\n///   @debug string-decapitalize('HELLO world', true);\r\n///   // => \"hello world\"\r\n\r\n@function string-decapitalize($input-string, $lowercase-rest: false) {\r\n\r\n    @if ($lowercase-rest == true) {\r\n        $first-item: nth(string-split($input-string), 1);\r\n        $first-item: string-to-lowercase($first-item);\r\n        $input-string: $first-item + str-slice($input-string, str-length($first-item) + 1);\r\n    } @else {\r\n        $input-string: string-decapitalize-first($input-string);\r\n    }\r\n\r\n    @return $input-string;\r\n}\r\n",
		"/// #string-clean($input-string) => string\r\n/// Returns trimmed string with multiply spaces replaced with single space\r\n/// @param {string} $input-string - input string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-clean('Hello  World');\r\n///   // => \"Hello World\"\r\n///   @debug string-clean('  Hello  World   ');\r\n///   // => \"Hello World\"\r\n\r\n@function string-clean($input-string) {\r\n    $input-string: string-trim($input-string);\r\n    $output-string: '';\r\n    $items: string-split($input-string);\r\n\r\n    @for $i from 1 through length($items) {\r\n        $output-string: $output-string + if($i == 1, '', ' ') + nth($items, $i);\r\n    }\r\n\r\n    @return $output-string;\r\n}\r\n",
		"/// #string-chars($input-string) => list\r\n/// Returns SCSS list with all string characters.\r\n/// @param {string} $input-string - input string\r\n/// @return {list}\r\n/// @example\r\n///   @debug string-chars('Hello world');\r\n///   // => (\"H\" \"e\" \"l\" \"l\" \"o\" \" \" \"w\" \"o\" \"r\" \"l\" \"d\")\r\n\r\n@function string-chars($input-string) {\r\n\r\n    $chars: ();\r\n\r\n    @for $i from 1 through str-length($input-string) {\r\n        $chars: append($chars, str-slice($input-string, $i, $i));\r\n    }\r\n\r\n    @return $chars;\r\n}\r\n",
		"/// #string-char-at($input-string, $index) => string\r\n/// Returns character from input string at provided index\r\n/// @param {string} $input-string - input string\r\n/// @param {number} $index - index of required char\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-char-at('Hello World', 2);\r\n///   // => \"e\"\r\n///   @debug string-char-at('Hello World', -4);\r\n///   // => \"o\"\r\n\r\n@function string-char-at($input-string, $index) {\r\n    @return str-slice($input-string, $index, $index);\r\n}\r\n",
		"//Not Tested\r\n// /// #string-split($input-string[, $separator]) => list\r\n// /// Returns an array of strings by separating the string into substrings\r\n// /// @param {string} $input string - input string\r\n// /// @param {string} $separator - separator to split on [' ']\r\n// /// @return {list}\r\n// /// @example\r\n// ///   @debug string-split('Hello World');\r\n// ///   // => (\"Hello\" \"World\")\r\n// ///   @debug string-split('Hello World, Hello World', ', ');\r\n// ///   // => (\"Hello World\" \"Hello World\")\r\n// @function string-split($input-string, $separator: ' ') {\r\n\r\n//   $list: ();\r\n//   $index: string-index($input-string, $separator);\r\n//   $indent: str-length($separator);\r\n\r\n//   @while ($index != null) {\r\n//       $item: str-slice($input-string, 1, $index - 1);\r\n//       $input-string: str-slice($input-string, $index + $indent);\r\n//       $index: string-index($input-string, $separator);\r\n\r\n//       @if (str-length($item) != 0) {\r\n//           $list: append($list, $item);\r\n//       }\r\n//   }\r\n\r\n//   @return append($list, $input-string);\r\n// }\r\n\r\n\r\n/// @param {String} $string    - string to split\r\n/// @param {String} $delimiter ('') - string to use as a delimiter to split `$string`\r\n/// @return {List}\r\n@function string-split($string, $delimiter: \"\") {\r\n  $result: ();\r\n  $length: str-length($string);\r\n\r\n  @if str-length($delimiter) == 0 {\r\n    @for $i from 1 through $length {\r\n      $result: append($result, str-slice($string, $i, $i));\r\n    }\r\n\r\n    @return $result;\r\n  }\r\n\r\n  $running: true;\r\n  $remaining: $string;\r\n\r\n  @while $running {\r\n    $index: str-index($remaining, $delimiter);\r\n\r\n    @if $index {\r\n      $slice: str-slice($remaining, 1, $index - 1);\r\n      $result: append($result, $slice);\r\n      $remaining: str-slice($remaining, $index + str-length($delimiter));\r\n    } @else {\r\n      $running: false;\r\n    }\r\n  }\r\n\r\n  @return append($result, $remaining);\r\n}",
		"/// #string-join($input-list[, $separator]) => string\r\n/// Returns input list converted to a string\r\n/// @param {list} $input-list\r\n/// @param {string} $separator ['']\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-join((1, '. ', 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd'));\r\n///   // => \"1. Hello World\"\r\n///   @debug string-join(('a', 'b', 'c'), '*');\r\n///   // => \"a*b*c\"\r\n\r\n@function string-join($input-list, $separator: '') {\r\n    $output-string: '';\r\n\r\n    @if type_of($input-list) == list {\r\n        @each $item in $input-list {\r\n            @if type-of($item) == string or type-of($item) == number {\r\n                $output-string: $output-string + if(index($input-list, $item) != 1, $separator, '') + $item;\r\n            }\r\n        }\r\n    }\r\n\r\n    @return $output-string;\r\n};\r\n",
		"/// #string-count($input-string, $substring) => number\r\n/// Returns number of occurrences of substring in string.\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @return {number}\r\n/// @example\r\n///   @debug string-count('Hello World', 'z');\r\n///   // => 0\r\n///   @debug string-count('Hello World', 'l');\r\n///   // => 3\r\n///   @debug string-count('Hello World Hello World Hello World', 'ello');\r\n///   // => 3\r\n\r\n@function string-count($input-string, $substring) {\r\n    $substring-info: string-substring-info($input-string, $substring);\r\n\r\n    @return map-get($substring-info, count);\r\n}\r\n",
		"/// #string-to-uppercase($input-string) => string\r\n/// Returns the calling string value converted to uppercase\r\n/// Alias for to-upper-case String SASS built-in function\r\n/// @param {string} $input-string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-to-uppercase('hello world');\r\n///   // => \"HELLO WORLD\"\r\n\r\n@function string-to-uppercase($input-string) {\r\n    @return to-upper-case($input-string);\r\n}\r\n",
		"/// #string-to-lowercase($input-string) => string\r\n/// Returns the calling string value converted to lowercase\r\n/// Alias for to-lower-case String SASS built-in function\r\n/// @param {string} $input-string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-to-lowercase('Hello World');\r\n///   // => \"hello world\"\r\n\r\n@function string-to-lowercase($input-string) {\r\n    @return to-lower-case($input-string);\r\n}\r\n",
		"/// #string-to-swapcase($input-string) => string\r\n/// Returns a copy of the string in which all the case-based characters have had their case swapped.\r\n/// @param {string} $input-string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-to-swapcase('hELLO wORLD');\r\n///   // => \"Hello World\"\r\n\r\n@function string-to-swapcase($input-string) {\r\n    $chars: string-chars($input-string);\r\n    $string: '';\r\n\r\n    @each $char in $chars {\r\n        @if ($char == string-to-uppercase($char)) {\r\n            $string: $string + string-to-lowercase($char);\r\n        } @else {\r\n            $string: $string + string-to-uppercase($char);\r\n        }\r\n    }\r\n\r\n    @return $string;\r\n}\r\n",
		"@function string-remove-whitespace($str) {\r\n  @while (str-index($str, ' ') != null) {\r\n    $index: str-index($str, ' ');\r\n    $str: \"#{str-slice($str, 0, $index - 1)}#{str-slice($str, $index + 1)}\";\r\n  }\r\n  @return $str;\r\n}",
		"/// #string-replace($input-string, $substring[, $replace, $g]) => string\r\n/// Returns copy of input string where defined substring replaced by $replace argument\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @param {string} $replace ['']\r\n/// @param {boolean} $g [true]\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-replace('Hello world', 'l');\r\n///   // => \"Heo word\"\r\n///   @debug string-replace('Hello world', 'l', $g: false);\r\n///   // => \"Helo world\"\r\n///   @debug string-replace('Hello world', 'Hello', 'Privet');\r\n///   // => \"Privet world\"\r\n\r\n@function string-replace($input-string, $substring, $replace: '', $g: true) {\r\n\r\n    $index: string-index($input-string, $substring);\r\n\r\n    @if $index {\r\n        @if $g {\r\n            @return str-slice($input-string, 1, $index - 1) + $replace + string-replace(str-slice($input-string, $index + str-length($substring)), $substring, $replace);\r\n        } @else {\r\n            @return str-slice($input-string, 1, $index - 1) + $replace + str-slice($input-string, $index + str-length($substring));\r\n        }\r\n    }\r\n\r\n    @return $input-string;\r\n}\r\n",
		"/// #string-include($input-string, $substring) => boolean\r\n/// Returns boolean result of check if string contains a substring.\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @return {boolean}\r\n/// @example\r\n///   @debug string-include('Hello World', 'lo');\r\n///   // => true\r\n\r\n@function string-include($input-string, $substring) {\r\n    @return not not string-index($input-string, $substring);\r\n}\r\n",
		"/// #string-substring-info($input-string, $substring) => map\r\n/// Returns map with information about $substring in $input-string: quantity, first index and last index\r\n/// @access private\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @return {map}\r\n\r\n@function string-substring-info($input-string, $substring) {\r\n\r\n    $count: 0;\r\n    $first-index: null;\r\n    $last-index: null;\r\n    $string: $input-string;\r\n    $has-substring: string-include($input-string, $substring);\r\n\r\n    @if ($has-substring) {\r\n        $first-index: string-index($string, $substring);\r\n        $last-index: 0;\r\n    }\r\n\r\n    @while($has-substring != false) {\r\n        $count: $count + 1;\r\n        $current-index: string-index($input-string, $substring) + if($count == 1, 0, str-length($substring) - 1);\r\n        $last-index: $last-index + $current-index;\r\n        $input-string: str-slice($input-string, string-index($input-string, $substring) + str-length($substring));\r\n        $has-substring: string-include($input-string, $substring);\r\n    }\r\n\r\n    @return (\r\n            count:       $count,\r\n            first-index: $first-index,\r\n            last-index:  $last-index\r\n    );\r\n}\r\n",
		"/// Find first char which is not a space\r\n/// @access private\r\n/// @param {String} $string - String\r\n/// @param {String} $direction ['left'] - Either `left` or `right`\r\n/// @return {Number}\r\n\r\n@function string-first-index($string, $direction: 'left') {\r\n  @for $i from 1 through str-length($string) {\r\n    $index: if($direction == 'left', $i, -$i);\r\n\r\n    @if str-slice($string, string-to-number($index), string-to-number($index)) != ' ' {\r\n      @return $index;\r\n    }\r\n  }\r\n\r\n  @return 0;\r\n}",
		"/// #string-last-index($input-string, $substring) => number\r\n/// Returns last index of substring in provided string\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @return {number}\r\n/// @example\r\n///   @debug string-last-index('Hello World', 'l');\r\n///   // => 10\r\n///   @debug string-last-index('Hello World', 'z');\r\n///   // => null\r\n\r\n@function string-last-index($input-string, $substring) {\r\n    $substring-info: string-substring-info($input-string, $substring);\r\n\r\n    @return map-get($substring-info, last-index);\r\n}\r\n",
		"/// #string-reverse($input-string) => string\r\n/// Returns reversed string.\r\n/// @param {string} $input-string\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-reverse('Hello World');\r\n///   // => \"dlroW olleH\"\r\n\r\n@function string-reverse($input-string) {\r\n    $output-string: '';\r\n    $chars: string-chars($input-string);\r\n\r\n    @for $i from length($chars) through 1 {\r\n        $output-string: $output-string + nth($chars, $i);\r\n    }\r\n\r\n    @return $output-string;\r\n}\r\n",
		"/// #string-get-not-skipped-char-index($input-string[, $search-from, $trim-chars]) => number\r\n/// Returns an index of first character that doesn't match any characters from $trim-chars argument\r\n/// @access private\r\n/// @param {string} $input-string\r\n/// @param {'left' | 'right'} $search-from ['left']\r\n/// @param {string} $skip-char [' ']\r\n/// @return {number}\r\n\r\n@function string-get-not-skipped-char-index($input-string, $search-from: 'left', $trim-chars: ' ') {\r\n\r\n    @if (type-of($input-string) != string) {\r\n        @error(\"$input-string should be a string\");\r\n    }\r\n\r\n    @if (index(('left', 'right'), $search-from) == null) {\r\n        @error(\"$search-from should be defined as 'left' or 'right'\");\r\n    }\r\n\r\n    $exclude: string-chars($trim-chars);\r\n\r\n    @for $i from 1 through str-length($input-string) {\r\n\r\n        $index: if($search-from == 'left', $i, -$i);\r\n        $char: str-slice($input-string, $index, $index);\r\n\r\n        @if (index($exclude, $char) == null) {\r\n            @return $index;\r\n        }\r\n    }\r\n\r\n    @return 0;\r\n}\r\n",
		"/// #string-trim($input-string[, $trim-chars]) => string\r\n/// Returns trimmed string\r\n/// @param {string} $input-string\r\n/// @param {string} $trim-chars [' ']\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-trim(' Hello World ');\r\n///   // => \"Hello World\"\r\n///   @debug string-trim(' -_ Helllo World _- ', '- _');\r\n///   // => \"Hello World\"\r\n\r\n@function string-trim($input-string, $trim-chars: ' ') {\r\n    @return str-slice(\r\n                    $input-string,\r\n                    string-get-not-skipped-char-index($input-string, 'left', $trim-chars),\r\n                    string-get-not-skipped-char-index($input-string, 'right', $trim-chars)\r\n    );\r\n}\r\n",
		"/// #string-ltrim($input-string[, $trim-chars]) => string\r\n/// Returns string with removed leading characters.\r\n/// @param {string} $input-string\r\n/// @param {string} $trim-chars [' ']\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-ltrim(' Hello World ');\r\n///   // => \"Hello World \"\r\n///   @debug string-ltrim(' -_ Helllo World _- ', '- _');\r\n///   // => \"Helllo World _- \"\r\n\r\n@function string-ltrim($input-string, $trim-chars: ' ') {\r\n    @return str-slice(\r\n                    $input-string,\r\n                    string-get-not-skipped-char-index($input-string, 'left', $trim-chars)\r\n    );\r\n}\r\n",
		"/// #string-rtrim($input-string[, $trim-chars]) => string\r\n/// Returns string with removed trailing characters.\r\n/// @param {string} $input-string\r\n/// @param {string} $trim-chars [' ']\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-rtrim(' Hello World ');\r\n///   // => \" Hello World\"\r\n///   @debug string-rtrim(' -_ Helllo World _- ', '- _');\r\n///   // => \" -_ Helllo World\"\r\n\r\n@function string-rtrim($input-string, $trim-chars: ' ') {\r\n    @return str-slice(\r\n                    $input-string,\r\n                    1,\r\n                    string-get-not-skipped-char-index($input-string, 'right', $trim-chars)\r\n    );\r\n}\r\n",
		"/// #string-is-blank($input-string) => boolean\r\n/// Returns true if string is empty or contains whitespaces only\r\n/// @param {string} $input-string\r\n/// @return {boolean}\r\n/// @example\r\n///   @debug string-is-blank('');\r\n///   // => true\r\n///   @debug string-is-blank(' ');\r\n///   // => true\r\n///   @debug string-is-blank('Hello World');\r\n///   // => false\r\n\r\n@function string-is-blank($input-string) {\r\n    $input-string: string-trim($input-string);\r\n\r\n    @if (str-length($input-string) > 0) {\r\n        @return false;\r\n    }\r\n\r\n    @return true;\r\n}\r\n",
		"/// #string-starts-with($input-string, $substring[, $ignore-case]) => boolean\r\n/// Returns true if string starts with provided substring\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @param {boolean} $ignore-case\r\n/// @return {boolean}\r\n/// @example\r\n///   @debug string-starts-with('Hello World', 'Hel');\r\n///   // => true\r\n///   @debug string-starts-with('Hello World', 'hel');\r\n///   // => false\r\n///   @debug string-starts-with('Hello World', 'hel', true);\r\n///   // => true\r\n\r\n@function string-starts-with($input-string, $substring, $ignore-case: false) {\r\n\r\n    @if (string-is-blank($substring)) {\r\n        @return true;\r\n    }\r\n\r\n    @if ($ignore-case) {\r\n        $input-string: string-to-lowercase($input-string);\r\n        $substring: string-to-lowercase($substring);\r\n    }\r\n\r\n    @return str-slice($input-string, 1, str-length($substring)) == $substring;\r\n}\r\n",
		"\r\n@charset 'utf-8';\r\n\r\n@function string-ends-with($string, $find) {\r\n\t\r\n\r\n  @if (str-index($string, $find) == (str-length($string) - str-length($find) + 1)) {\r\n\r\n    @return true;\r\n\t\r\n  } @else {\r\n\r\n    @return false;\r\n  }\r\n}\r\n\r\n\r\n//Not Tested\r\n/// #string-ends-with($input-string, $substring[, $ignore-case]) => boolean\r\n/// Returns true if string ends with provided substring\r\n/// @param {string} $input-string\r\n/// @param {string} $substring\r\n/// @param {boolean} $ignore-case [false]\r\n/// @return {boolean}\r\n/// @example\r\n///   @debug string-starts-with('Hello World', 'Hel');\r\n///   // => true\r\n///   @debug string-starts-with('Hello World', 'hel');\r\n///   // => false\r\n///   @debug string-starts-with('Hello World', 'hel', true);\r\n///   // => true\r\n// @function string-ends-with($input-string, $substring, $ignore-case: false) {\r\n\r\n//   @if (string-is-blank($substring)) {\r\n//       @return true;\r\n//   }\r\n\r\n//   @if ($ignore-case) {\r\n//       $input-string: string-to-lowercase($input-string);\r\n//       $substring: string-to-lowercase($substring);\r\n//   }\r\n\r\n//   $start-index: str-length($substring) * -1;\r\n\r\n//   @return str-slice($input-string, $start-index, -1) == $substring;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n//1- First Function\r\n//UPDATE #2: The function above will return false if $string contains $find more than once.\r\n// This function will return true if $string truly ends with $find:\r\n\r\n//@function string.ends-with($string, $find) {\r\n//  @if (str-slice($string, (str-length($string) - str-length($find) + 1)) == $find) {\r\n//    @return true;\r\n//  } @else {\r\n//    @return false;\r\n//  }\r\n//}\r\n\r\n//UPDATE #3: Simplified:\r\n\r\n//@function string-ends-with($string, $find) {\r\n//  @return str-slice($string, (str-length($string) - str-length(string) + 1)) == $find;\r\n//}\r\n//@function string-not-ends-with($string, $find) {\r\n//  @return str-slice($string, (str-length($string) - str-length($find) + 1)) != $find;\r\n//}",
		"/// #string-repeat($input-string[, $times, $separator]) => string\r\n/// Returns input string repeated provided number of times\r\n/// @param {string} $input-string\r\n/// @param {number} $times [1]\r\n/// @param {string} $separate-with ['']\r\n/// @return {string}\r\n/// @example\r\n///   @debug string-repeat('Hello');\r\n///   // => \"Hello\"\r\n///   @debug string-repeat('Hello', 2);\r\n///   // => \"HelloHello\"\r\n///   @debug string-repeat('Hello', 2, ', ');\r\n///   // => \"Hello, Hello\"\r\n\r\n@function string-repeat($input-string, $times: 1, $separator: '') {\r\n    $output-string: '';\r\n\r\n    @for $i from 1 through $times {\r\n        $output-string: $output-string + if($i == 1, '', $separator) + $input-string;\r\n    }\r\n\r\n    @return $output-string;\r\n}\r\n",
		"@import \"./properties/access\";",
		"@import \"./user-select/access\";\r\n@import \"./width/access\";\r\n@import \"./common-sets/access\";\r\n@import \"./position/access\";\r\n@import \"./color/access\";\r\n@import \"./font/access\";\r\n@import \"./border/access\";\r\n@import \"./background/access\";\r\n@import \"./background-color/access\";\r\n@import \"./background-clip/access\";\r\n@import \"./clip-path/access\";\r\n@import \"./appearance/access\";\r\n@import \"./box-shadow/access\";\r\n@import \"./text/access\";\r\n@import \"./display/access\";\r\n@import \"./vertical-align/access\";\r\n@import \"./opacity/access\";\r\n@import \"./filter/access\";\r\n@import \"./overflow/access\";\r\n@import \"./height/access\";\r\n@import \"./transition/access\";\r\n@import \"./animation/access\";",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./user-select-mixins\";",
		"@mixin user-select($value : none) {\r\n-webkit-user-select :  $value;\r\n-khtml-user-select:    $value;\r\n   -moz-user-select :  $value;\r\n    -ms-user-select :  $value;\r\n     -o-user-select:   $value;\r\n        user-select :  $value;\r\n\r\n\r\n}\r\n",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./width-mixins\";",
		"@mixin width-fit-content{\r\n    width: -webkit-fit-content;\r\n    width: -moz-fit-content;\r\n    width: fit-content;\r\n}",
		"",
		"@import \"./structure-simulation/access\";\r\n@import \"./optimization/access\";\r\n@import \"./box-sizing/access\";\r\n@import \"./responsive-design/access\";\r\n@import \"./scaling/access\";\r\n@import \"./centering/access\";\r\n@import \"./transform/access\";",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./switch-case-mixin\";",
		"//fallthrough syntax #1\r\n// @mixin button1($button-type){\r\n//     @extend %button; //all buttons extend button\r\n\r\n//     @include switch($button-type) {\r\n//     @include    case( logout ) {\r\n//                     @extend %big-button;\r\n//                     @extend %blue-button; \r\n//     @include        case-break; }\r\n//     @include    case( help ) {} //fall through:\r\n//     @include    case( go ) { \r\n//                     @extend %big-button; } \r\n//     @include    case( call ) {} //fall through:\r\n//     @include    case( download ) { \r\n//                     @extend %green-button;\r\n//     @include        case-break; }\r\n//     @include    case( default ){\r\n//                     @extend %beige-button;\r\n//     @include        case-break; } \r\n//              }\r\n//     //end switch\r\n// }\r\n// //fallthrough syntax #2 (condensed)\r\n// @mixin button2($button-type){\r\n//     @extend %button; //all buttons extend button\r\n\r\n//     @include switch($button-type){\r\n//     @include    case( logout ) {\r\n//                     @extend %big-button;\r\n//                     @extend %blue-button;\r\n//     @include        case-break; }\r\n//     @include    case( (help, go) ) {\r\n//                     @extend %big-button; } //fall through:\r\n//     @include    case( (call, download) ) {//default button\r\n//                     @extend %green-button;\r\n//   @include        case-break; }\r\n//    @include    case( default ) {\r\n                    // @extend %beige-button;\r\n//    @include        case-break; }\r\n//             }\r\n    //end switch\r\n//}\r\n\r\n// case statement functionality\r\n$z_SwitchCaseList:() !global; \r\n$z_SwitchCaseFoundList: () !global;\r\n@mixin switch-case($case-values:default)\r\n{\r\n    //only for use inside a switch include, used for creating a switch case statement\r\n    $switch-value: list-get-last-item($z_SwitchCaseList);\r\n    $value-found: list-get-last-item($z_SwitchCaseFoundList);\r\n    @if ( $value-found != break ) {\r\n        $match: if($value-found == false, false, true);\r\n        @if ($match == false ) {\r\n            @each $case in $case-values {\r\n                @if $case == $switch-value or $case == default {\r\n                    @if $value-found != break {\r\n                        $match: true;\r\n                    }\r\n                }\r\n                @if $switch-value != () and $switch-value != $case and $case == default and $value-found != break\r\n                { //case is default and switch val not found\r\n                    @warn \"#{$switch-value} not found, using default case\";\r\n                }\r\n            }\r\n        }\r\n        @if $match == true {\r\n            $z_SwitchCaseFoundList: set-nth($z_SwitchCaseFoundList, length($z_SwitchCaseFoundList), $match) !global;\r\n            @content;\r\n        }\r\n    }\r\n}\r\n@mixin switch($switch-value)\r\n{   \r\n    $z_SwitchCaseList: append($z_SwitchCaseList, $switch-value) !global;\r\n    $z_SwitchCaseFoundList: append($z_SwitchCaseFoundList, false) !global;\r\n    @content;\r\n    $z_SwitchCaseFoundList: list-remove-item-nth($z_SwitchCaseFoundList, length($z_SwitchCaseFoundList)) !global;\r\n    $z_SwitchCaseList: list-remove-item-nth($z_SwitchCaseList, length($z_SwitchCaseList)) !global;\r\n}\r\n@mixin case-break {\r\n    //include this inside the case item, not after, if you want to discontinue processing case statements once the correct one is found.\r\n    $z_SwitchCaseFoundList: set-nth($z_SwitchCaseFoundList, length($z_SwitchCaseFoundList), break) !global;\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"",
		"@import \"./text-optimization-placeholder\";",
		"%text-rendering-optimizeLegibility {\r\n\ttext-rendering: optimizeLegibility;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./box-sizing-mixins\";",
		"@mixin box-sizing($value){\r\n      -webkit-box-sizing: $value;\r\n  -moz-box-sizing: $value;\r\n  box-sizing: $value;\r\n}",
		"@import \"./box-sizing-placeholders\";",
		"%box-area-zero{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n}",
		"@import \"./breakpoint-system/access\";\r\n@import \"./aspect-ratio-responsive/access\";\r\n@import \"./grid-system/access\";",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"@import \"./breakpoints-values\";",
		"//Down Point for Desktop approaches with max-width\r\n//Up Point for Desktop approaches with min-width\r\n$bp-dphone:0px;\r\n$bp-uphone:600px;\r\n$bp-dtablet-p:600px;\r\n$bp-utablet-p:900px;\r\n$bp-dtablet-l:900px;\r\n$bp-utablet-l:1200px;\r\n$bp-ddesktop-m:1200px;\r\n$bp-udesktop-m:1800px;\r\n$bp-ddesktop-l:1800px;\r\n$bp-udesktop-l:2560px;\r\n\r\n//Break Points\r\n$bp-xs: $bp-uphone;\r\n$bp-sm: $bp-dtablet-p;\r\n$bp-md: $bp-dtablet-l;\r\n$bp-lg: $bp-ddesktop-m;\r\n$bp-xl: $bp-ddesktop-l;",
		"@import \"./breakpoint-responsive-mixins\";\r\n@import \"./screens/access\";",
		"@mixin responsive-to($val, $breakpoint) {\r\n    @media screen and ($val : $breakpoint) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-to-2D-and($val, $breakpoint, $val-2, $breakpoint-2) {\r\n    @media screen and ($val : $breakpoint) and ($val-2 : $breakpoint-2) {\r\n        @content;\r\n    }\r\n}",
		"@import \"./xxl/access\";\r\n@import \"./xl/access\";\r\n@import \"./lg/access\";\r\n@import \"./md/access\";\r\n@import \"./sm/access\";\r\n@import \"./xs/access\";",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./xxl-portrait-mixins\";",
		"",
		"@import \"./xxl-landscape-mixins\";\r\n",
		"",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./xl-portrait-mixins\";",
		"",
		"@import \"./xl-landscape-mixins\";",
		"@mixin responsive-xl-less {\r\n    @include responsive-to(max-width, $bp-xl) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-xl-more {\r\n    @include responsive-to-2D-and(min-width, 1200px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-xl-less {\r\n    @include responsive-to(max-width, 1200px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-xl-more {\r\n    @include responsive-to(min-width, 1200px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-xl-more {\r\n    @include responsive-to(min-width, $bp-xl) {\r\n        @content;\r\n    }\r\n}\r\n",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./lg-portrait-mixins\";\r\n",
		"",
		"@import \"./lg-lanscape-mixins\";",
		"@mixin responsive-lg {\r\n    @include responsive-to-2D-and(min-width, $bp-lg, max-width, $bp-xl) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-lg {\r\n    @include responsive-to-2D-and(min-width, 992px, max-width, 1200px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-lg-less {\r\n    @include responsive-to(max-width, 992px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-lg-more {\r\n    @include responsive-to(min-width, 992px) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin responsive-lg-more {\r\n    @include responsive-to(min-width, $bp-lg) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-lg-less {\r\n    @include responsive-to(max-width, $bp-lg) {\r\n        @content;\r\n    }\r\n}\r\n",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./md-portrait-mixins\";\r\n",
		"",
		"@import \"./md-landscape-mixins\";\r\n",
		"@mixin responsive-md {\r\n    @include responsive-to-2D-and(min-width, $bp-md, max-width, $bp-lg) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-md-less {\r\n    @include responsive-to(max-width, $bp-md) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-md-less {\r\n    @include responsive-to(max-width, 768px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-md-less {\r\n    @include responsive-to-2D-and(max-width, 768px,max-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-md{\r\n    @include responsive-to-2D-and(min-width, 768px, max-width, 992px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-more-h-md-less {\r\n    @include responsive-to-2D-and(min-width, 768px,max-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-md-more {\r\n    @include responsive-to-2D-and(max-width, 768px,min-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-md-more {\r\n    @include responsive-to-2D-and(min-width, 768px,min-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-more-h-md-more {\r\n    @include responsive-to-2D-and(min-width, 768px,min-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-md-more {\r\n    @include responsive-to-2D-and(max-width, 576px,max-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-md-more {\r\n    @include responsive-to(min-width, 768px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-md-more {\r\n    @include responsive-to(min-width, $bp-md) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-md-xl {\r\n    @include responsive-to-2D-and(min-width, $bp-md, max-width, $bp-xl) {\r\n        @content;\r\n    }\r\n}\r\n",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./sm-portrait-mixins\";\r\n",
		"",
		"@import \"./sm-landscape-mixins\";\r\n",
		"@mixin responsive-bootstrap-w-xl-less-h-sm-less {\r\n    @include responsive-to-2D-and(max-width, 1200px,max-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-xl-less-h-sm-less {\r\n    @include responsive-to-2D-and(max-width, 576px,max-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-sm-less-h-sm-more {\r\n    @include responsive-to-2D-and(max-width, 576px,min-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-sm-more {\r\n    @include responsive-to-2D-and(max-width, 768px,min-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-more-h-sm-less {\r\n    @include responsive-to-2D-and(min-width, 768px,max-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-sm-less-h-sm-less {\r\n    @include responsive-to-2D-and(max-width, 576px,max-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-sm-less-h-md-less {\r\n    @include responsive-to-2D-and(max-width, 576px,max-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-w-md-less-h-sm-less {\r\n    @include responsive-to-2D-and(max-width, 768px,max-height, 576px){\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-sm-less {\r\n    @include responsive-to(max-width, $bp-sm) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-sm-less {\r\n    @include responsive-to(max-width, 576px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-sm-lg {\r\n    @include responsive-to-2D-and(min-width, $bp-sm, max-width, $bp-lg) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-sm-xl {\r\n    @include responsive-to-2D-and(min-width, 576px, max-width, 1200px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-sm {\r\n    @include responsive-to-2D-and(min-width, 576px, max-width, 768px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-sm-more {\r\n    @include responsive-to(min-width, $bp-sm) {\r\n        @content;\r\n    }\r\n}\r\n@mixin  responsive-bootstrap-sm-lg {\r\n    \r\n    @include responsive-to(min-width, 576px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-bootstrap-sm-more {\r\n    @include responsive-to(min-width, 576px) {\r\n        @content;\r\n    }\r\n}\r\n@mixin responsive-sm-xl {\r\n    @include responsive-to-2D-and(min-width, $bp-sm, max-width, $bp-xl) {\r\n        @content;\r\n    }\r\n}\r\n",
		"@import \"./portrait/access\";\r\n@import \"./landscape/access\";",
		"@import \"./xs-portrait-mixins\";\r\n",
		"",
		"@import \"./xs-landscape-mixins\";",
		"@mixin responsive-bootstrap-h-xs-less {\r\n    @include responsive-to-2D-and(max-height, 768px){\r\n        @content;\r\n    }\r\n}\r\n",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./aspect-ratio-responsive\";",
		"\r\n// Aspect Retio 3/2\r\n@mixin responsive-min-aspect-32 {\r\n    @include responsive-to-aspect('3/2', 'min-aspect-ratio') {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin responsive-min-aspect-21 {\r\n    @include responsive-to-aspect('2/1', 'min-aspect-ratio') {\r\n        @content;\r\n    }\r\n}\r\n\r\n// Aspect Retio 1/1\r\n@mixin responsive-min-aspect-11 {\r\n    @include responsive-to-aspect('1/1', 'min-aspect-ratio') {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin responsive-to-aspect($val, $attr) {\r\n    @media ($attr: $val) {\r\n        @content;\r\n    }\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"",
		"@import \"./scaling-placeholder\";",
		"%fit-to-screen{\r\n    width:100%;\r\n    height:100%;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n}\r\n%fit-to-container{\r\n    width:100%;\r\n    height:100%;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./box-centering-mixins\";",
		"@mixin make-center-box($horizontal: true, $vertical: true) {\r\n    position: absolute;\r\n    @if ($horizontal and $vertical) {\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n\r\n    } @else if ($horizontal) {\r\n      left: 50%;\r\n      transform: translate(-50%, 0);\r\n    } @else if ($vertical) {\r\n      top: 50%;\r\n      transform: translate(0, -50%);\r\n    }\r\n  }",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./transform-mixins\";",
		"@mixin transform($value){\r\n    -webkit-transform:$value; \r\n\t-moz-transform: $value;\r\n\t-o-transform: $value;\r\n\t-ms-transform: $value;\r\n    transform: $value;\r\n}\r\n@mixin transform-origin($value){\r\n\t-webkit-transform-origin: $value;\r\n\t-ms-transform-origin: $value;\r\n\ttransform-origin: $value;\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./position-mixins\";",
		"@mixin position-sticky{\r\n    position:-webkit-sticky;\r\n    position:sticky;\r\n}",
		"@import \"./position-placeholders\";",
		"%position-absolute{\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n}\r\n%position-relative{\r\n    position: relative;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"@import \"./color-variables\";\r\n@import \"./favorites/import-all\";",
		"$hr-color-default : rgba(0, 0, 0, 0.1) !default;\r\n$mark-color: #000 !default;\r\n\r\n$link-color : #007bff  !default;\r\n$link-active-color: darken(#007bff, 23%)  !default;\r\n$link-hover-color : darken(#007bff, 12%)  !default;\r\n$link-visited-color: darken(rgb(30, 46, 116), 46%)  !default;",
		"@import \"./color-favorites-dark\";\r\n@import \"./color-favorites-light\";",
		"",
		"",
		"@import \"./color-mixins\";",
		"@mixin color-transparent(){\r\n    color:transparent;\r\n    -webkit-text-fill-color: transparent;\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"@import \"./font-variables\";",
		"$base-font-style: normal !default;\r\n$base-font-size: 16px;\r\n$calc-font-size: ($base-font-size * 62.5) / 100 !default;\r\n$base-font-weight: 400 !default;\r\n$font-weight-1: 700;\r\n",
		"@import \"./font-mixins\";",
		"﻿//example\r\n//$font-tanha-base-path :#{\"../../assets/fonts/tanha/tanha\"};\r\n//$font-family-tanha : tanha;\r\n//$font-tanha-prefixes : (url otf, url  ttf, url  woff, url eot, url svg hello, url woff2);\r\n//@include font-face($font-family-tanha, $font-tanha-base-path, $font-tanha-prefixes);\r\n@mixin font-face($font-family, $font-base-path, $font-prefixes) {\r\n\r\n    $font-src: '' !default;\r\n    $font-base-path : unquote($font-base-path);\r\n    \r\n    @each $font-source,\r\n    $prefix\r\n    ,$svg-font-name\r\n     in $font-prefixes {\r\n        $font-source: to-lower-case($font-source);\r\n        $str-length: str-length($string: $font-src);\r\n\r\n        @if($str-length !=0) {\r\n            $font-src: str-insert($string: $font-src, $insert: ', ', $index: $str-length+1);\r\n        }\r\n        @include switch($prefix) {\r\n\r\n\r\n            @include switch-case(otf) {\r\n\r\n                @if($font-source == \"url\") {\r\n                    $font-src: $font-src + url(quote($font-base-path + \".otf\"));\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n                @include case-break;\r\n            }\r\n\r\n            @include switch-case(woff2) {\r\n\r\n                @if($font-source == \"url\") {\r\n                    $font-src: $font-src + url(quote($font-base-path + \".woff2\")) + \" format('woff2')\";\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n\r\n                @include case-break;\r\n            }\r\n\r\n            @include switch-case(svg) {\r\n\r\n                @if($font-source == \"url\") {\r\n                    $font-src: $font-src + url(quote($font-base-path + \".svg#\"+ $svg-font-name)) + \" format('woff2')\";\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n\r\n                @include case-break;\r\n            }\r\n\r\n            @include switch-case(eot) {\r\n                @if($font-source == \"url\") {\r\n                    $font-src: $font-src + url(quote($font-base-path + \".eot\")) + \", \";\r\n                    $font-src: $font-src + url(quote($font-base-path + \".eot?#iefix\")) + \" format('embedded-opentype')\";\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n\r\n                @include case-break;\r\n            }\r\n\r\n            @include switch-case(ttf) {\r\n                @if($font-source == \"url\") {\r\n                    $font-src: $font-src + url(quote($font-base-path + \".ttf\")) + \" format('truetype')\";\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n\r\n\r\n                @include case-break;\r\n\r\n            }\r\n\r\n            @include switch-case(woff) {\r\n                @if($font-source == \"url\") {\r\n\r\n                    $font-src: $font-src + url(quote($font-base-path + \".woff\")) + \" format('woff')\";\r\n\r\n                }\r\n                @else if($font-source == \"local\") {}\r\n                @include case-break;\r\n\r\n            }\r\n            @include switch-case(default) {\r\n                @include case-break;\r\n            }\r\n        }\r\n\r\n    }\r\n    @font-face {\r\n        font-family: $font-family;\r\n        src: #{$font-src};\r\n        font-weight: normal;\r\n    }\r\n}\r\n//css-syntax\r\n// @font-face {\r\n//   font-family: 'MyWebFont';\r\n//   src: url('webfont.eot'); /* IE9 Compat Modes */\r\n//   src: url('webfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n//        url('webfont.woff2') format('woff2'), /* Super Modern Browsers */\r\n//        url('webfont.woff') format('woff'), /* Pretty Modern Browsers */\r\n//        url('webfont.ttf')  format('truetype'), /* Safari, Android, iOS */\r\n//        url('webfont.svg#svgFontName') format('svg'); /* Legacy iOS */\r\n\r\n    // src:local('bYekan');\r\n        // local('b Yekan'),/*some browser like e.g. safari*/\r\n        // url('BYekan.eot?#iefix') format('embedded-opentype'),/*<= IE-8 hack*/\r\n        // url('BYekan.woff') format('woff'),/*modern browsers*/\r\n        // url('BYekan.ttf') format('truetype'),/*all browsers except IE*/\r\n        // url('BYekan.svg#BYekan') format('svg');\r\n// }\r\n",
		"@import \"./font-palceholders\";",
		"%font-smoth-antialiased{\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./border-mixins\";\r\n@import \"./magic-border-mixins\";",
		"@mixin border-radius($value : 0)\r\n{\r\n    -moz-border-radius: $value; \r\n    -webkit-border-radius: $value; \r\n    -o-border-radius: $value; \r\n    border-radius: $value; \r\n}",
		"@mixin magic-border($backgroundRgb, $boderEffectMode){\r\n    \r\n    \r\n            $background : unquote($backgroundRgb);\r\n            background-color: $background !important;\r\n            &:after{\r\n\r\n                content: '';\r\n                display: block;\r\n                position: absolute;\r\n                bottom:0;\r\n                right: 0;\r\n                width: 100%;\r\n                height: 1px;\r\n\r\n                $mode : unquote($boderEffectMode);\r\n                $mode : quote($mode);\r\n                // 'dark-gray' mode\r\n                @if($mode == 'dark-gray'){\r\n\r\n                    background-color: #302826;\r\n                    @include box-shadow(#{\"0 0 5px 5px #292827\"})\r\n                    \r\n                }\r\n\r\n                //other mode development\r\n\r\n    }\r\n\r\n}\r\n",
		"@import \"./border-placeholder\";",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./gradients/access\";",
		"@import \"./gradient-linear-angle-mixins\";",
		"//@mixin gradient-linear($pre-value, $value, $basecolor: #111, $start-color: '#111', $end-color: '#000')\r\n//{\r\n//    // background: linear-gradient(#6490FF,#4567F1);\r\n//    background: $basecolor;\r\n//    background: -moz-linear-gradient($pre-value);\r\n//    background: -webkit-linear-gradient($pre-value);\r\n//    background: -ms-linear-gradient($pre-value);\r\n//    background: linear-gradient($value);\r\n//    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' #{$start-color}', endColorstr= '#{$end-color}', GradientType=1 );\r\n//}\r\n\r\n//\tbackground: rgba(47,137,252,1);\r\n//\tbackground: -moz-linear-gradient(-45deg, rgba(47,137,252,1) 0%, rgba(94,255,201,1) 100%);\r\n//\tbackground: -webkit-gradient(left top, right bottom, color-stop(0%, rgba(47,137,252,1)), color-stop(100%, rgba(94,255,201,1)));\r\n//\tbackground: -webkit-linear-gradient(-45deg, rgba(47,137,252,1) 0%, rgba(94,255,201,1) 100%);\r\n//\tbackground: -o-linear-gradient(-45deg, rgba(47,137,252,1) 0%, rgba(94,255,201,1) 100%);\r\n//\tbackground: -ms-linear-gradient(-45deg, rgba(47,137,252,1) 0%, rgba(94,255,201,1) 100%);\r\n//\tbackground: linear-gradient(135deg, rgba(47,137,252,1) 0%, rgba(94,255,201,1) 100%);\r\n//\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2f89fc', endColorstr='#5effc9', GradientType=1 );\r\n\r\n@mixin gradient-linear-angle($angle, $compatibility-mode, $color-stop-parameters...) {\r\n\r\n\r\n    $traditional-angle: \"\";\r\n\r\n    $color-stops-joined: #{ parameters-join(\",\", $color-stop-parameters) };\r\n    \r\n    $prifixes-angle: null;\r\n\r\n    @if($angle >=0 and $angle <=45) {\r\n\r\n        @if($angle >=0 and $angle <=22) {\r\n            $traditional-angle: \"left top, right top\";\r\n\r\n        }\r\n\r\n        @else if($angle >=23 and $angle <=45) {\r\n            $traditional-angle: \"left bottom, right top\";\r\n            color: $traditional-angle;\r\n\r\n        }\r\n\r\n        $prifixes-angle : 90 - $angle+deg;\r\n\r\n    }\r\n\r\n    @else if($angle >=46 and $angle <=90) {\r\n\r\n\r\n        @if($angle >=46 and $angle <=67) {\r\n            $traditional-angle: \"left bottom, right top\";\r\n\r\n        }\r\n\r\n        @else if($angle >=68 and $angle <=90) {\r\n            $traditional-angle: \"left top, left bottom\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 90 - $angle+deg;\r\n\r\n    }\r\n\r\n    @else if($angle >=91 and $angle <=135) {\r\n\r\n\r\n\r\n        @if($angle >=91 and $angle <=113) {\r\n            $traditional-angle: \"left top, left bottom\";\r\n\r\n        }\r\n\r\n        @else if($angle >=114 and $angle <=135) {\r\n            $traditional-angle: \"left top, right bottom\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n\r\n    }\r\n\r\n    @else if($angle >=136 and $angle <=180) {\r\n\r\n        @if($angle >=136 and $angle <=157) {\r\n            $traditional-angle: \"left top, right bottom\";\r\n\r\n        }\r\n\r\n        @else if($angle >=158 and $angle <=180) {\r\n            $traditional-angle: \"left top, right top\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n    }\r\n\r\n    @else if($angle >=181 and $angle <=225) {\r\n\r\n        @if($angle >=181 and $angle <=202) {\r\n            $traditional-angle: \"left top, right top\";\r\n\r\n        }\r\n\r\n        @else if($angle >=203 and $angle <=225) {\r\n            $traditional-angle: \"left bottom, right top\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n\r\n    }\r\n\r\n    @else if($angle >=226 and $angle <=270) {\r\n\r\n        @if($angle >=226 and $angle <=247) {\r\n            $traditional-angle: \"left bottom, right top\";\r\n\r\n        }\r\n\r\n        @else if($angle >=248 and $angle <=270) {\r\n            $traditional-angle: \"left top, left bottom\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n    }\r\n\r\n    @else if($angle >=271 and $angle <=315) {\r\n\r\n        @if($angle >=271 and $angle <=292) {\r\n            $traditional-angle: \"left top, left bottom\";\r\n\r\n        }\r\n\r\n        @else if($angle >=293 and $angle <=315) {\r\n            $traditional-angle: \"left top, right bottom\";\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n\r\n    }\r\n\r\n    @else if($angle >=316 and $angle <=360) {\r\n\r\n        @if($angle >=316 and $angle <=338) {\r\n            $traditional-angle: \"left top, right bottom\";\r\n\r\n        }\r\n\r\n        @else if($angle >=338 and $angle <=360) {\r\n            $traditional-angle: \"left top, right top\";\r\n\r\n        }\r\n\r\n        $prifixes-angle : 360+(90 - $angle)+deg;\r\n\r\n    }\r\n\r\n    $traditional-angle : #{\"linear, \" + $traditional-angle};\r\n\r\n\r\n    $start-color-stop : list-get-first-item($color-stop-parameters);\r\n    $splited-start-color-stops : string-split(#{ $start-color-stop }, \" \");\r\n\r\n    $start-color :  list-get-first-item($splited-start-color-stops);\r\n    $start-stop :  list-get-last-item($splited-start-color-stops);\r\n    \r\n    \r\n    $end-color-stop : list-get-last-item($color-stop-parameters);\r\n    $splited-end-color-stops : string-split(#{ $end-color-stop }, \" \");\r\n\r\n    $end-color :  list-get-first-item($splited-end-color-stops);\r\n    $end-stop :  list-get-last-item($splited-end-color-stops);\r\n\r\n    @if(string-ends-with(#{ $angle }, \"deg\") == false)\r\n    {\r\n        $angle : $angle + deg;\r\n    }\r\n\r\n    background : $start-color;\r\n\r\n    background: -moz-linear-gradient($angle, $color-stops-joined) !important;\r\n    /* ff3.6+ */\r\n\r\n    @if( $compatibility-mode == true)\r\n    {\r\n    \tbackground: -webkit-gradient(linear, $traditional-angle, color-stop($start-stop, $end-color), color-stop($end-stop, $start-color))  !important\r\n       /* safari4+,chrome */    \r\n    }\r\n\r\n    background: -webkit-linear-gradient($angle, $color-stops-joined) !important;\r\n    /* safari5.1+,chrome10+ */\r\n    background: -o-linear-gradient($angle, $color-stops-joined) !important;\r\n    /* opera 11.10+ */\r\n    background: -ms-linear-gradient($angle, $color-stops-joined) !important;\r\n    /* ie10+ */\r\n    background: linear-gradient($prifixes-angle, $color-stops-joined) !important;\r\n    /* w3c */\r\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{ '\\'' + $start-color + '\\''}, endColorstr=#{ '\\'' + $end-color + '\\''}, GradientType=1);\r\n    /* ie6-9 */\r\n\r\n}",
		"@import \"./background-placeholders\";",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"@import \"./background-color-variable\";",
		"$hr-background-color-default : transparent !default;\r\n$mark-background-color: #ff0 !default;\r\n\r\n$link-background-color : transparent!default;\r\n$link-active-background-color: transparent  !default;\r\n$link-hover-background-color : transparent  !default;\r\n$link-visited-background-color: transparent  !default;\r\n",
		"@import \"./background-color-mixins\";",
		"@mixin background-color-transparent(){\r\n    background-color:transparent;\r\n}\r\n\r\n@mixin alpha-background-color($color, $background) {\r\n  $percent: alpha($color) * 70%;\r\n  $opaque: opacify($color, 1);\r\n  $solid-color: mix($opaque, $background, $percent);\r\n  background-color: $solid-color;\r\n}",
		"@import \"./background-color-placeholders\";",
		"%background-color-transparent{\r\n\tbackground-color : transparent;\r\n}\r\n%background-color-Dark{\r\n\tbackground-color : rgba(29, 29, 29, 1);\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./background-clip-mixins\";",
		"@mixin background-clip($value : text , $unset-text-fill : false){\r\n    background-clip: $value ;\r\n    -webkit-background-clip: $value;\r\n    -moz-background-clip: $value;\r\n    -ms-background-clip: $value;\r\n    -o-background-clip: $value;\r\n\t@if($value == text)\r\n\t{\r\n\t\t@include text-fill;\r\n\t}\r\n\t@if($unset-text-fill == true and $value == unset)\r\n\t{\r\n\t\t@include text-fill(unset !important);\r\n\t}\r\n}\r\n",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./clip-path-mixins\";\r\n@import \"./supports-clip-path-mixin\";",
		"@mixin clip-path-none {\r\n    -webkit-clip-path: none;\r\n    clip-path: none;\r\n}\r\n\r\n@mixin clip-path($val) {\r\n    -webkit-clip-path: $val;\r\n    clip-path: $val;\r\n}\r\n\r\n/*start-> clip-path: circle(<length|percentage> at <position>);*/\r\n@mixin clip-path-circle($val) {\r\n    -webkit-clip-path: $val;\r\n    clip-path: $val;\r\n}\r\n\r\n/*end*/\r\n/*start-> clip-path: ellipse(<length|percentage>{2} at <position>);;*/\r\n@mixin clip-path-ellipase($val-x, $val-y) {\r\n    -webkit-clip-path: ellipase($val-x $val-y);\r\n    clip-path: ellipase($val-x $val-y);\r\n}\r\n\r\n/*end*/\r\n/*start-> clip-path: inset(<length|percentage>{1,4} round <border-radius>{1,4});*/\r\n/*\r\nLength/Percentage: can represent all four sides, top/bottom sides, or top side\r\nLength/Percentage: can represent left/right sides or right side\r\nLength/Percentage: represents the bottom side\r\nLength/Percentage: represents the left side\r\nBorder radius: requires the \"round\" keyword before the value\r\n*/\r\n\r\n@mixin clip-path-inset($val-1, $rounded:false, $val-round:null) {\r\n    @if($rounded) {\r\n        -webkit-clip-path: inset($val-1 round $val-round);\r\n        clip-path: inset($val-1 round $val-round);\r\n    }\r\n\r\n    @else {\r\n        -webkit-clip-path: inset($val-1);\r\n        clip-path: inset($val-1);\r\n    }\r\n\r\n}\r\n\r\n/*end*/\r\n/*start-> clip-path: polygon(<length|percentage>);*/\r\n/*\r\nexample:\r\n0 0, 50% 0, 100% 0, 100% 50%, 100% 100%, 50% 100%, 0 100%, 0 50%\r\n*/\r\n@mixin clip-path-polygon($val) {\r\n    -webkit-clip-path: polygon($val);\r\n    clip-path: polygon($val);\r\n}\r\n\r\n/*end*/",
		"@mixin supports-clip-path($value) {\r\n    @supports(-webkit-clip-path:$value)or(clip-path:$value) {\r\n        @content;\r\n    }\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./appearance-mixin\";",
		"@mixin apearance($value){\r\n    -webkit-appearance: $value;\r\n    -moz-appearance: $value;\r\n    appearance: $value;\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./box-shadow-mixins\";",
		"@mixin box-shadow($value : none) {\r\n    box-shadow: $value;\r\n    -moz-box-shadow: $value;\r\n    -webkit-box-shadow: $value;\r\n}\r\n\r\n@mixin box-shadow-with-back-color($value, $backcolor:#000) {\r\n    background-color: $back-color;\r\n    box-shadow: $value;\r\n    -moz-box-shadow: $value;\r\n    -webkit-box-shadow: $value;\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./text-align-mixins\";\r\n@import \"./text-shadow-mixins\";\r\n@import \"./text-fill-mixins\";",
		"@mixin text-align-last($value, $includeIe: $false){\r\n\r\n\r\n\t@if($includeIe == $true)\r\n\t{\r\n\r\n\t\ttext-align: justify !important;\r\n\t}\r\n   -moz-text-align-last:$value;\r\n        text-align-last: $value;\r\n}\r\n",
		"@mixin text-shadow($value) {\r\n\t//apply rules from caniuse.com\r\n}\r\n",
		"@mixin text-fill($value : transparent){\r\n\t-webkit-text-fill-color: $value;\r\n}",
		"@import \"./text-placeholders\";",
		"",
		"@import \"./flex/access\";",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./display-flex\";\r\n@import \"./align-content\";\r\n@import \"./align-items\";\r\n@import \"./align-self\";\r\n@import \"./justify-content\";\r\n@import \"./flex\";\r\n@import \"./flex-direction\";\r\n@import \"./flex-flow\";\r\n@import \"./flex-shrink\";\r\n@import \"./flex-wrap\";\r\n@import \"./order\";",
		"@mixin display-flex\r\n{\r\n    display : -webkit-box;\r\n    display : -webkit-flex;\r\n    display : -moz-box;\r\n    display : -ms-flexbox;\r\n    display : flex\r\n\r\n}",
		"/*examples:\r\n-ms-flex-line-pack: center | distribute | \r\n  end | justify | start | stretch\r\n-webkit-align-content: center | flex-end | \r\n  flex-start | space-around | space-between | stretch\r\nalign-content: center | flex-end | flex-start | \r\n  space-around | space-between | stretch\r\n*/\r\n@mixin align-content($value-1:space-between, $value-2:justify) {\r\n    -ms-flex-line-pack: $value-2;\r\n    -webkit-align-content: $value-1;\r\n    align-content: $value-1;\r\n}\r\n",
		"\r\n// values : stretch|center|flex-start|flex-end|baseline|initial|inherit\r\n\r\n@mixin align-items($value: flex-start) {\r\n \r\n    $traditional-value : \"\";\r\n\r\n    @if($value == flex-start)\r\n    {\r\n\t$traditional-value : start;\r\n    }\r\n    @else if($value == flex-end)\r\n    {\r\n\t$traditional-value : end;\r\n    }\r\n    @else if(\r\n\t\t$value == inherit or\r\n \t\t$value == initial or\r\n \t\t$value == baseline or\r\n \t\t$value == center or\r\n \t\t$value == stretch\r\n\t)\r\n    {\r\n\t$traditional-value : $value;\r\n    }\r\n\r\n   -webkit-box-align: $traditional-value;\r\n     -webkit-align-items: $value;\r\n      -moz-box-align: $traditional-value;\r\n       -ms-flex-align: $traditional-value;\r\n           align-items :$value;\r\n\r\n}\r\n",
		"/*examples:\r\n-ms-flex-item-align: auto | baseline | center | end | start | stretch\r\n-webkit-align-self: auto | baseline | center | flex-end | flex-start | stretch\r\nalign-self: auto | baseline | center | flex-end | flex-start | stretch\r\n*/\r\n@mixin align-self($value-1:baseline, $value-2:baseline) {\r\n    -ms-flex-item-align: $value-2;\t \r\n    //-ms-grid-row-align: $value-2;\r\n    -webkit-align-self: $value-1;\r\n    align-self: $value-1;\r\n\r\n}",
		"\r\n/*examples:\r\n-webkit-box-pack: center | end | justify | start\r\n-moz-box-pack: center | end | justify | start\r\n-ms-flex-pack: center | end | justify | start\r\n-webkit-justify-content: center | flex-end | flex-start | space-around | space-between\r\njustify-content: center | flex-end | flex-start | space-around | space-between\r\n*/\r\n\r\n// values : flex-start|flex-end|center|space-between|space-around|initial|inherit\r\n\r\n@mixin justify-content($value:space-between) {\r\n\r\n    $include : true;\r\n    $traditional-value : \"\";\r\n\r\n    @if($value == flex-end)\r\n    {\r\n\t    $traditional-value : end;\r\n    }\r\n    @else if($value == flex-start)\r\n    {\r\n\t    $traditional-value : start;\r\n    }\r\n    @else if($value == space-around)\r\n    {\r\n\t    $traditional-value : distribute;\r\n        $include : false;\r\n    }\r\n    @else if($value == space-between)\r\n    {\r\n\t    $traditional-value : justify;\r\n    }\r\n    @else if(\r\n\t\t$value == inherit or\r\n \t\t$value == initial or\r\n \t\t$value == center \r\n\t)\r\n    {\r\n\t$traditional-value : $value;\r\n    }\r\n\r\n    @if($include == true)\r\n    {\r\n        -webkit-box-pack: $traditional-value;\r\n        -moz-box-pack: $traditional-value;\r\n    }\r\n\r\n    -ms-flex-pack: $traditional-value;\r\n    -webkit-justify-content: $value;\r\n    justify-content: $value;\r\n}",
		"/*examples:\r\ndisplay: -webkit-box | -webkit-inline-box\r\ndisplay: -moz-box | -moz-inline-box\r\ndisplay: -ms-flexbox | -ms-inline-flexbox\r\ndisplay: -webkit-flex | -webkit-inline-flex\r\ndisplay: flex | inline-flex\r\n*/\r\n@mixin flex($value : 1) {\r\n    -webkit-box-flex: $value;\r\n    -moz-box-flex: $value;\r\n    -ms-flex: $value;\r\n    -webkit-flex: $value;\r\n    flex: $value;\r\n\r\n}",
		"/*examples:\r\n-webkit-box-orient: block-axis | horizontal | inline-axis | vertical\r\n-webkit-box-direction: normal | reverse\r\n-moz-box-orient: block-axis | horizontal | inline-axis | vertical\r\n-moz-box-direction: normal | reverse\r\n-ms-flex-direction: column | column-reverse | row | row-reverse\r\n-webkit-flex-direction: column | column-reverse | row | row-reverse\r\nflex-direction: column | column-reverse | row | row-reverse\r\n*/\r\n\r\n// values : row|row-reverse|column|column-reverse|initial|inherit\r\n\r\n@mixin flex-direction($value:row) {\r\n\r\n\r\n\r\n    $box-orient-value : \"\";\r\n    $box-direction-value : \"\";\r\n\r\n    @if($value == row)\r\n    {\r\n\t$box-orient-value : horizontal;\r\n\t$box-direction-value : normal;\r\n    }\r\n    @else if($value == row-reverse)\r\n    {\r\n\t$box-orient-value : horizontal;\r\n\t$box-direction-value : reverse;\r\n    }\r\n    @else if($value == column)\r\n    {\r\n\t$box-orient-value : vertical;\r\n\t$box-direction-value : normal;\r\n    }\r\n    @else if($value == column-reverse)\r\n    {\r\n\t$box-orient-value : vertical;\r\n\t$box-direction-value : reverse;\r\n    }\r\n    @else if( $value == inherit or $value == initial )\r\n    {\r\n\t$box-orient-value : $value;\r\n\t$box-direction-value : $value;\r\n    }\r\n\t\r\n\r\n   -webkit-box-orient: $box-orient-value;\r\n   -webkit-box-direction: $box-direction-value;\r\n   -webkit-flex-direction: $value;\r\n      -moz-box-orient: $box-orient-value;\r\n      -moz-box-direction: $box-direction-value;\r\n       -ms-flex-direction: $value;\r\n           flex-direction: $value;\r\n}",
		"\r\n //values : flex-direction flex-wrap|initial|inherit\r\n\r\n\r\n// possible-values : flex-direction flex-wrap\r\n//row nowrap\r\n//row-reverse nowrap\r\n//column nowrap\r\n//column-reverse nowrap\r\n//row wrap\r\n//row-reverse wrap\r\n//column wrap\r\n//column-reverse wrap\r\n//row wrap-reverse\r\n//row-reverse wrap-reverse\r\n//column wrap-reverse\r\n//column-reverse wrap-reverse\r\n\r\n\r\n/*examples:\r\n-ms-flex-flow: <-ms-flex-direction> || <-ms-flex-wrap>\r\n-webkit-flex-flow: <flex-direction> || <flex-wrap>\r\nflex-flow: <flex-direction> || <flex-wrap>\r\n*/\r\n\r\n@mixin flex-flow($value: row) {\r\n \r\n    $value : string-trim($value);\r\n\r\n    $value-splited : string-split($value, ' ');\r\n    $box-orient : \"\";\r\n    $box-direction : \"\";\r\n    $include : true;\r\n\r\n    @if(($value == \"wrap\") or ($value == \"nowrap\"))\r\n    {\r\n       $include : false;\r\n\r\n    }\r\n    @else if($value == column)\r\n    {\r\n\t$box-orient : vertical;\r\n \t$box-direction : normal;\r\n    }\r\n    @else if($value == \"row-reverse\")\r\n    {\r\n\t$box-orient : horizontal;\r\n \t$box-direction : reverse;\r\n    }\r\n    @else if($value == \"wrap-reverse\")\r\n    {\r\n\t$box-orient : vertical;\r\n \t$box-direction : normal;\r\n    }\r\n    @else if( $value == \"column-reverse\")\r\n    {\r\n\t$box-orient : vertical;\r\n \t$box-direction : reverse;\r\n    }\r\n    @else if($value == \"row\" )\r\n    {\r\n\t$box-orient : horizontal;\r\n \t$box-direction : normal;\r\n    }\r\n\r\n    @else if( $value == inherit or $value == initial )\r\n    {\r\n\t$box-orient : $value;\r\n\t$box-direction : $value;\r\n    }\r\n    @if((index($value-splited, \"column\") ==  1) and (length($value-splited) ==  2))\r\n    {\r\n \t$box-orient : vertical;\r\n \t$box-direction : normal;\r\n    }\r\n    @if((index($value-splited, \"row\") ==  1) and (length($value-splited) ==  2))\r\n    {\r\n \t$box-orient : horizontal;\r\n \t$box-direction : normal;\r\n    }\r\n    @if((index($value-splited, \"row-reverse\") ==  1) and (length($value-splited) ==  2))\r\n    {\r\n \t$box-orient : horizontal;\r\n \t$box-direction : reverse;\r\n    }\r\n    @if((index($value-splited, \"column-reverse\") ==  1) and (length($value-splited) ==  2))\r\n    {\r\n \t$box-orient : vertical;\r\n \t$box-direction : reverse;\r\n    }\r\n\r\n\r\n    @if($include == true)\r\n    {\r\n\r\n    \t-webkit-box-orient : $box-orient;\r\n        -webkit-box-direction : $box-direction;\r\n    }\r\n    \t-webkit-flex-flow : $value ;\r\n    @if($include == true)\r\n    {\r\n    \t-moz-box-orient :$box-orient;\r\n    }\r\n\r\n       -moz-box-direction : $box-direction;\r\n        -ms-flex-flow : $value ;\r\n            flex-flow : $value;\r\n\r\n}\r\n\t\r\n\r\n",
		"@mixin flex-shrink($value : 0) {\r\n\r\n    -webkit-flex-shrink : $value;\r\n        -ms-flex-negative : $value;\r\n            flex-shrink : $value;\r\n}",
		"\r\n// values :  nowrap|wrap|wrap-reverse|initial|inherit;\r\n\r\n@mixin flex-wrap($value : row) {\r\n\r\n    -webkit-flex-wrap : $value;\r\n        -ms-flex-wrap : $value;\r\n            flex-wrap : $value;\r\n}\r\n\r\n\r\n",
		"/*examples:\r\n-webkit-box-ordinal-group: 1 | <positive integer>\r\n-moz-box-ordinal-group: 1 | <positive integer>\r\n-ms-flex-order: 0 | <integer>\r\n-webkit-order: 0 | <integer>\r\norder: 0 | <integer>\r\n*/\r\n@mixin order($value) {\r\n\r\n    -webkit-box-ordinal-group : $value + 1;\r\n    -webkit-order : $value;\r\n       -moz-box-ordinal-group : $value + 1;\r\n        -ms-flex-order : $value;\r\n            order : $value;\r\n}",
		"@import \"./flex-placeholder\";",
		"%flex-fill{\r\n  @include flex(1);\r\n}\r\n%flex-auto{\r\n  @include flex(auto !important);\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./supports-vertical-align-mixins\";",
		"@mixin supports-vertical-align($value : text-top) {\r\n\r\n    vertical-align: $value;\r\n\r\n    @supports (vertical-align: -webkit-baseline-middle) {\r\n        vertical-align: -webkit-baseline-middle;\r\n    }\r\n    @supports (vertical-align: -moz-middle-with-baseline) {\r\n        vertical-align: -moz-middle-with-baseline;\r\n    }\r\n}",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./opacity-mixins\";",
		"@mixin opacity($value:0, $important: false) {\r\n\r\n\t@if($important == false){\r\n\r\n   \t\t$ie-value : $value * 100;\r\n\r\n  \t\t/* IE 8 like 50 */\r\n  \t\t-ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ie-value})\";\r\n\r\n \t\t /* IE 5-7 like 50*/\r\n  \t\tfilter: alpha(opacity=$ie-value);\r\n\r\n \t \t/* Netscape like .5*/\r\n \t \t-moz-opacity: $value;\r\n\r\n  \t\t/* Safari 1.x like .5*/\r\n  \t\t-khtml-opacity: $value;\r\n\r\n  \t\t/* Good browsers like .5*/\r\n  \t\topacity: $value;\r\n\t}\r\n\t@else{\r\n   \t\t$ie-value : $value * 100 !important;\r\n\r\n  \t\t/* IE 8 like 50 */\r\n  \t\t-ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$ie-value})\" !important;\r\n\r\n \t\t /* IE 5-7 like 50*/\r\n  \t\tfilter: alpha(opacity=$ie-value) !important;\r\n\r\n \t \t/* Netscape like .5*/\r\n \t \t-moz-opacity: $value !important;\r\n\r\n  \t\t/* Safari 1.x like .5*/\r\n  \t\t-khtml-opacity: $value !important;\r\n\r\n  \t\t/* Good browsers like .5*/\r\n  \t\topacity: $value !important;\r\n\r\n\t}\r\n}\r\n\r\n",
		"",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./filter-mixins\";",
		"@mixin filter($value)\r\n{\r\n    -webkit-filter : $value;\r\n            filter : $value;\r\n}",
		"@import \"./filter-placeholders\";",
		"%filter-blur-full{\r\n    @include filter(blur(100px));\r\n}\r\n%filter-blur-medium{\r\n    @include filter(blur(50px));\r\n}\r\n%filter-blur-non{\r\n    @include filter(blur(0));\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"",
		"@import \"./overflow-placeholders\";",
		"%overflow-auto{\r\n  overflow : auto !important;\r\n}\r\n%overflow-x-auto{\r\n  overflow-x : auto !important;\r\n}\r\n%overflow-y-auto{\r\n  overflow-y : auto !important;\r\n}\r\n\r\n%overflow-hidden{\r\n  overflow : hidden !important;\r\n}\r\n\r\n%overflow-scrolling-touch {\r\n\r\n    -webkit-overflow-scrolling: touch;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"@import \"./height-variables\";",
		"$uiCenter-default-fix-height : 37px !default;\r\n$uiCenter-default-fix-height-xl-more : $uiCenter-default-fix-height;\r\n$uiCenter-default-fix-height-responsive-bootstrap-xl-more : $uiCenter-default-fix-height;\r\n",
		"",
		"@import \"./height-placeholders\";",
		"%height-auto{\r\n  height: auto !important;\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./transition-mixins\";",
		"@mixin transition($value){\r\n    -webkit-transition: $value;\r\n    -moz-transition: $value;\r\n    -o-transition: $value;\r\n    transition:$value;\r\n}\r\n@mixin double-transition($value,$value-2){\r\n    -webkit-transition: $value, $value-2;\r\n    -moz-transition: $value, $value-2;\r\n    -o-transition: $value, $value-2;\r\n    transition:$value, $value-2;\r\n}\r\n@mixin triple-transition($value,$value-2){\r\n    -webkit-transition: $value, $value-2;\r\n    -moz-transition: $value, $value-2;\r\n    -o-transition: $value, $value-2;\r\n    transition:$value, $value-2;\r\n}\r\n@mixin transition-duration($value){\r\n    -webkit-transition-duration: $value;\r\n    -moz-transition-duration: $value;\r\n    -o-transition-duration: $value;\r\n    transition-duration:$value;\r\n}",
		"@import \"./transition-placeholders\";",
		"%transition-default{\r\n\t@include transition(all 256ms ease);\r\n}",
		"@import \"./variables/import-all\";\r\n@import \"./mixins/access\";\r\n@import \"./placeholders/import-all\";",
		"",
		"@import \"./keyframes-mixins\";\r\n@import \"./animation-mixins\";",
		"@mixin keyframes($animation-name) {\r\n    @-webkit-keyframes #{$animation-name} {\r\n      @content;\r\n    }\r\n  \r\n    @-moz-keyframes #{$animation-name} {\r\n      @content;\r\n    }\r\n  \r\n    @-o-keyframes #{$animation-name} {\r\n      @content;\r\n    }\r\n  \r\n    @keyframes #{$animation-name} {\r\n      @content;\r\n    }\r\n  }\r\n  ",
		"@mixin animation($animation-name, $value) {\r\n  -webkit-animation: $animation-name $value;\r\n  -moz-animation: $animation-name $value;\r\n  -o-animation: $animation-name $value;\r\n  animation: $animation-name $value;\r\n}\r\n\r\n@mixin animation-delay($value) {\r\n  -webkit-animation-delay: $value;\r\n  //Check for exist then un-commnet\r\n  // -moz-animation-delay: $value;\r\n  //Check for exist then un-commnet\r\n  // -o-animation-delay: $value;\r\n  animation-delay: $value;\r\n}",
		"",
		"@import \"./class-generator/access\";",
		"@import \"./coloring-system/access\";\r\n@import \"./css-property/access\";\r\n@import \"./fast-coding/access\";\r\n",
		"@import \"./default-coloring-system\";\r\n\r\n// @if($use-defaultColoringSystem == true)\r\n// {\r\n// }",
		"$color-dark :  rgba(29, 29, 29, 1)  !global !default;\r\n$color-dark-transparent-low :   rgba(29, 29, 29, .8) !global !default;\r\n$color-dark-transparent-medium :  rgba(29, 29, 29, .5) !global  !default;\r\n$color-dark-transparent-high :  rgba(29, 29, 29, .3)   !global !default;\r\n\r\n$color-light : rgba(223, 223, 223, 1) !default;\r\n$color-light-transparent-low :  rgba(223, 223, 223, .8)  !global !default;\r\n$color-light-transparent-medium :   rgba(223, 223, 223, .5)  !global !default;\r\n$color-light-transparent-high :  rgba(223, 223, 223, .3)  !global !default;\r\n\r\n\r\n$favorite-colors : (\r\n\r\n    \"color-dark\" : $color-dark,\r\n    \"color-dark-transparent-low\" : $color-dark-transparent-low,\r\n    \"color-dark-transparent-medium\" : $color-dark-transparent-medium,\r\n    \"color-dark-transparent-high\" : $color-dark-transparent-high,\r\n    \r\n    \"color-light\" : $color-light,\r\n    \"color-light-transparent-low\" : $color-light-transparent-low,\r\n    \"color-light-transparent-medium\" : $color-light-transparent-medium,\r\n    \"color-light-transparent-high\" : $color-light-transparent-high\r\n    )!default;\r\n    \r\n    \r\n    //Generate Colors\r\n    @each $color-name, $color-value in $favorite-colors {\r\n    \r\n        .#{$color-name}{\r\n            color : $color-value !important;\r\n        }\r\n        .#{$color-name}-inverted{\r\n            color : invert($color-value) !important;\r\n        }\r\n        .#{$color-name}-background-inverted{\r\n            color: $color-value !important;\r\n            background-color : invert($color-value) !important;\r\n        }\r\n\r\n    }\r\n    //Generate Background Colors\r\n    $favorite-background-colors : (\r\n    \r\n    \"background-color-dark\" : $color-dark,\r\n    \"background-color-dark-transparent-low\" : $color-dark-transparent-low,\r\n    \"background-color-dark-transparent-medium\" : $color-dark-transparent-medium,\r\n    \"background-color-dark-transparent-high\" : $color-dark-transparent-high,\r\n    \r\n    \"background-color-light\" : $color-light,\r\n    \"background-color-light-transparent-low\" : $color-light-transparent-low,\r\n    \"background-color-light-transparent-medium\" : $color-light-transparent-medium,\r\n    \"background-color-light-transparent-high\" : $color-light-transparent-high\r\n    )!default;\r\n    \r\n    \r\n    @each $background-color-name, $background-color-value in $favorite-background-colors {\r\n    \r\n        .#{$background-color-name}{\r\n    \r\n            background-color : $background-color-value !important;\r\n        }    \r\n        .#{$background-color-name}-inverted{\r\n    \r\n            background-color : invert($background-color-value) !important;\r\n        }\r\n        .#{$background-color-name}-color-inverted{\r\n            background-color: $background-color-value !important;\r\n            color : invert($background-color-value) !important;\r\n        }\r\n    }\r\n    \r\n\r\n    //@each $background-color-name, $background-color-value in $favorite-colors {\r\n    \r\n    //.#{$background-color-name}{\r\n    //\t@if(str-index($background-color-name , -dark)){\r\n    \r\n    //\t\tbackground-color: $background-color-value !important;\r\n    //\t\tcolor : lighten($background-color-value, 50) !important;\r\n    \r\n    //\t}@elseif(str-index($background-color-name, -light)){\r\n    \r\n    //\t\tbackground-color: $background-color-value !important;\r\n    //\t\tcolor : darken($background-color-value, 50) !important;\r\n    //\t}\r\n    //}\r\n    //}",
		"@import \"./use-configuration\";\r\n@import \"./import-all-width\";\r\n@import \"./import-all-height\";\r\n@import \"./import-all-text\";\r\n@import \"./import-all-display\";\r\n@import \"./import-all-opacity\";\r\n@import \"./import-all-filter\";\r\n@import \"./import-all-transform\";\r\n@import \"./import-all-transition\";\r\n@import \"./import-all-overflow\";\r\n@if($use-display == true)\r\n{\r\n}\r\n@if($use-overflow == true)\r\n{\r\n}\r\n@if($use-opacity == true)\r\n{\r\n}\r\n@if($use-filter == true)\r\n{\r\n}\r\n@if($use-transform == true)\r\n{\r\n}\r\n@if($use-transiotion == true)\r\n{\r\n}\r\n",
		"$use-display: true;\r\n$use-filter: true;\r\n$use-opacity: true;\r\n$use-overflow: true;\r\n$use-transform: true;\r\n$use-transiotion: true;",
		"@import \"./width/default-width\";",
		"\r\n$widthPrecentages : (\r\n    \"5\" : .05%,\r\n    \"0\" : .0%,\r\n    \"1\" : .01%,\r\n    \"10\" : .1%,\r\n    \"15\" : .15%,\r\n    \"23\" : .23%,\r\n    \"30\" : .3%,\r\n    \"40\" : .4%,\r\n    \"50\" : .5%,\r\n    \"60\" : .6%,\r\n    \"70\" : .7%,\r\n    \"80\" : .8%,\r\n    \"90\" : .9%,\r\n    \"100\" : 1%,\r\n    )!default;\r\n\r\n    @each $name, $value in $widthPrecentages {\r\n    \r\n        $width-percentage: $value * 100;\r\n        .w-#{$name}{\r\n    \r\n            width: $width-percentage;  \r\n        }\r\n    }\r\n    ",
		"@import \"./height/default-height\";",
		"\r\n$heightPrecentages : (\r\n    \"5\" : .05%,\r\n    \"0\" : .0%,\r\n    \"1\" : .01%,\r\n    \"10\" : .1%,\r\n    \"15\" : .15%,\r\n    \"23\" : .23%,\r\n    \"30\" : .3%,\r\n    \"40\" : .4%,\r\n    \"50\" : .5%,\r\n    \"60\" : .6%,\r\n    \"70\" : .7%,\r\n    \"80\" : .8%,\r\n    \"90\" : .9%,\r\n    \"100\" : 1%,\r\n    )!default;\r\n\r\n    @each $name, $value in $heightPrecentages {\r\n    \r\n        $height-percentage: $value * 100;\r\n        .h-#{$name}{\r\n    \r\n            height: $height-percentage;  \r\n        }\r\n    }\r\n    ",
		"@import \"./text/default-text\";",
		".text-center{\r\n    vertical-align: middle;\r\n    text-align: center;\r\n}",
		"@import \"./display/default-display\";",
		"//.d-none{\r\n//    display: none !important;\r\n//}",
		"@import \"./opacity/default-opacity\";",
		".opacity-0 {\r\n    @include opacity;\r\n}",
		"@import \"./filter/default-filter\";",
		".blur-full{\r\n     @extend %filter-blur-full;\r\n}",
		"@import \"./transform/default-transform\";",
		".transform-origin-center{\r\n    @include transform-origin(center);\r\n}\r\n\r\n",
		"@import \"./transition/default-transition\";",
		".transition-default{\r\n    @include transition(all 256ms linear);\r\n}\r\n\r\n.transition-0 {\r\n    @include transition(all 0s !important);\r\n}\r\n",
		"@import \"./overflow/default-overflow\";",
		".overflow-hidden{\r\n\t@extend %overflow-hidden;\r\n}",
		"@import \"./set-box-location\";\r\n@import \"./sizing\";\r\n@import \"./container-styling\";\r\n",
		".center-location{\r\n    @include make-center-box;\r\n}",
		".icon-sm{\r\n    width:30px;\r\n    height:30px;\r\n}",
		".container-fluid {\r\n    width: 100%;\r\n    padding-right: 15px;\r\n    padding-left: 15px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n}\r\n  "
	],
	"names": [],
	"mappings": "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"
}